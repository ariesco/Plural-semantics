  ---- from the book All About Maude
  ---- by the Maude team

  fmod MULTISET{X :: TRIV} is
    protecting NAT .
    pr SET{X} .

    sort Mset{X} .
    subsort X$Elt < Mset{X} .

    op emptyMS : -> Mset{X} [ctor] .
    op _._ : Mset{X} Mset{X} -> Mset{X} [ctor assoc comm id: emptyMS] .

    op isEmpty : Mset{X} -> Bool .
    op sizeOf : Mset{X} -> Nat .

    op setToMultiset : Set{X} -> Mset{X} .
    op multisetToSet : Mset{X} -> Set{X} .

    vars E E' : X$Elt .
    vars S S' : Mset{X} .
    vars C : Set{X} .

    eq isEmpty(emptyMS) = true .
    eq isEmpty(E . S) = false .

    eq sizeOf(emptyMS) = 0 .
    eq sizeOf(E . S) = 1 + sizeOf(S) .

    op isIn : X$Elt Mset{X} -> Bool .
    op mult : X$Elt Mset{X} -> Nat .

    eq isIn(E, E . S) = true .
    eq isIn(E, S) = false [owise] .

    eq mult(E, E . S) = 1 + mult(E, S) .
    eq mult(E, S) = 0 [owise] .

    op deleteMS : X$Elt Mset{X} -> Mset{X} .
    op deleteMS1 : X$Elt Mset{X} -> Mset{X} .

    eq deleteMS(E, E . S) = deleteMS(E, S) .
    eq deleteMS(E, S) = S [owise] .

    eq deleteMS1(E, E . S) = S .
    eq deleteMS1(E, S) = S [owise] .

    op intersectionMS : Mset{X} Mset{X} -> Mset{X} .
    op difference : Mset{X} Mset{X} -> Mset{X} .

    eq intersectionMS(E . S, E . S') = E . intersectionMS(S, S') .
    eq intersectionMS(S, S') = emptyMS [owise] .

    eq difference(E . S, E . S') = difference(S, S') .
    eq difference(S, S') = S [owise] .

    eq setToMultiset(empty) = emptyMS .
    eq setToMultiset((E , C)) = E . setToMultiset(C) .

    eq multisetToSet(emptyMS) = empty .
    eq multisetToSet((E . S)) = E , multisetToSet(S) .
  endfm

***(
  fmod MULTISET-TEST is
    protecting MULTISET{Int} .
  endfm

Maude> red mult(2, 2 2 1 2 3 2) .
reduce in MULTISET-TEST : mult(2, 2 2 1 2 2 3) .
rewrites: 9 in 0ms cpu (0ms real) (~ rewrites/second)
result NzNat: 4

Maude> red intersectionMS(2 2 3 4, 2 2 1 3 3 2) .
reduce in MULTISET-TEST : intersectionMS(2 2 3 4, 2 2 1 3 2 3) .
rewrites: 4 in 0ms cpu (0ms real) (~ rewrites/second)
result Mset{Int}: 2 2 3

Maude> red difference(2 2 3 4, 2 2 1 3 3 2) .
reduce in MULTISET-TEST : difference(2 2 3 4, 2 2 1 3 2 3) .
rewrites: 4 in 0ms cpu (0ms real) (~ rewrites/second)
result NzNat: 4
)
